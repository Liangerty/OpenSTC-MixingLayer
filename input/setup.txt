bool parallel = 0      // specify the mode of computation. 0 - serial, 1 - parallel.

int  problem_type = 0  // the type of problem. 0 - general problem, 1 - mixing layer.

// Grid info
real gridScale = 1    // grid scale(m)

// controls
int initial = 0         // 0 - new case, 1 - continue from a previous case.
int total_step = 1000000  // total number of steps
int output_file = 10000  // frequency of output files
int output_screen = 1000 // frequency of screen output

// numerics
// temporal scheme
bool steady = 0                         // 0 - unsteady, 1 - steady
real cfl = 0.5                            // CFL number
int     implicit_method = 1         // How to implicitly treat the ODE. 0 - Explicit integration; 1 - DPLUR
int     DPLUR_inner_step = 3        // If we use DPLUR, then we need a specified number of inner iterations.
real convergence_criteria = 1e-7    // The criteria of convergence

int	 temporal_scheme = 3                // Temporal scheme for transient sims: 2-Dual-time iteration with DPLUR; 3-SSPRK
bool fixed_time_step   = 0              // If the time step is fixed(1), then the time step should be given; otherwise(0), the time step is determined by CFL number.
real dt = 5e-9                          // In unsteady simulation, the time step should be given
real total_simulation_time = 4e-3   // In unsteady simulation, how long physical time to be simulated 2.2154e-3

// spatial discretization
int inviscid_scheme = 71                // 2 - Roe, 3 - AUSM+, 4 - HLLC, 51 - WENOZ5-cp, 52 - WENOZ5-ch, 6 - Energy Preserving Scheme
int reconstruction = 4                  // 2 - MUSCL, 3 - NND2, 4 - WENO5, 5 - WENO7
bool positive_preserving = 0            // If the Positive-preserving limiter is activated, only implemented for 51/52
int viscous_order = 2                   // Default: 2nd order central discretization. Other choices: 0(inviscid)

// chemical info
int species = 0  // If there is species involved. 0 - Air as perfect gas; 1 - Species involved; 2 - Species + mixture fraction + mixture fraction variance are solved
int reaction = 0 //0-No reaction; 1-Finite rate chemistry; 2-Flamelet model. Even no reactions are involved, the mechanism file should exit to clarify the species
string mechanism_file = chemistry/H2_mech_mixing.inp  // H2_mech_mixing.inp

// turbulent sim info
bool turbulence = 0 // 0 - laminar/DNS, 1 - turbulent

// bc info
array string boundary_conditions {
 freestream outflow wall
}
string  reference_state =   freestream  // Specify the reference state for the simulation. The reference state is used to calculate the stagnation enthalpy and the stagnation pressure.
struct  freestream {
    string  type            =   inflow
    int     label           =   5
    int     inflow_type     =   0 // 0 for constant inflow, 1 for mixing-layer-type inflow, other types may be added(such as 2 for self-similar inflow)
    int     fluctuation_type    =  0       // Specify the type of fluctuation. 0 for no fluctuation, 1 for fluctuation in velocity with white noise.
    real    temperature     =   56.2
    real    mach            =   3.5
    real    reynolds        =   1.107e+6
}
struct outflow {
    string type = outflow
    int label   =   6
}
struct  periodic  {
    string type = periodic
    int label = 8
}
struct wall {
    string type = wall
    int label = 2
    string  thermal_type    =   isothermal  // Thermal wall type can be 1. "adiabatic" wall; 2. "isothermal" wall
    real temperature = 172.208
    int fluctuation_type = 0
}

array int post_process {
    0
}

// statistical choice
bool if_collect_statistics = 0
bool if_continue_collect_statistics = 0
bool perform_spanwise_average = 1

// monitor info
int if_monitor = 0 // Monitor some points
string monitor_file = input/monitor_points.txt
array string monitor_var {
    density u   v  w  pressure temperature H2 O2 N2
}
// The slices are only for mixing layers, whose x coordinate is fixed for the same i. (scaled by gridScale)
int slice_frequency = 1000
array real xSlice = {
   600
}
// We assume the z coordinate is fixed for the same k index. (scaled by gridScale)
array real zSlice = {
    0
}
